{"meta":{"title":"Hexo","subtitle":"","description":"","author":"John Doe","url":"http://www.010101.cc","root":"/"},"pages":[{"title":"","date":"2021-11-08T15:58:59.009Z","updated":"2021-11-08T15:58:59.009Z","comments":true,"path":"index.html","permalink":"http://www.010101.cc/index.html","excerpt":"","text":"叫我021吧！ 请叫我021吧 Web Developer &amp; Designer Shenzhen, China × Toggle navigation Home Archives Categories Tags Repository Books Links About Board 欢迎交流与我分享您的经验! Archive November 20212 Recent Posts test 2021-11-08 Hello World 2021-11-08 test Nov 8 Comments Hello World Nov 8 Comments Theme by cofess base on pure. window.jQuery || document.write('') (function (window) { var INSIGHT_CONFIG = { TRANSLATION: { POSTS: 'Posts', PAGES: 'Pages', CATEGORIES: 'Categories', TAGS: 'Tags', UNTITLED: '(Untitled)', }, ROOT_URL: '/', CONTENT_URL: '/content.json', }; window.INSIGHT_CONFIG = INSIGHT_CONFIG; })(window);"},{"title":"标签","date":"2021-11-09T06:45:29.327Z","updated":"2021-11-09T06:45:29.327Z","comments":false,"path":"tags/index.html","permalink":"http://www.010101.cc/tags/index.html","excerpt":"","text":""},{"title":"关于","date":"2021-11-09T06:50:25.258Z","updated":"2021-11-09T06:50:25.258Z","comments":false,"path":"about/index.html","permalink":"http://www.010101.cc/about/index.html","excerpt":"","text":"个人详细介绍"},{"title":"分类","date":"2021-11-09T06:49:57.349Z","updated":"2021-11-09T06:49:57.349Z","comments":false,"path":"categories/index.html","permalink":"http://www.010101.cc/categories/index.html","excerpt":"","text":""},{"title":"友情链接","date":"2021-11-09T06:50:41.947Z","updated":"2021-11-09T06:50:41.947Z","comments":true,"path":"links/index.html","permalink":"http://www.010101.cc/links/index.html","excerpt":"","text":""}],"posts":[{"title":"CPU内核模块之KPCR","slug":"E_Process","date":"2021-11-08T14:23:44.689Z","updated":"2021-11-10T02:22:52.255Z","comments":true,"path":"2021/11/08/E_Process/","link":"","permalink":"http://www.010101.cc/2021/11/08/E_Process/","excerpt":"","text":"github 访问慢，而其他网页正常.Mac 修改hosts文件12345678910111213141516171819202122232425262728293031Step 1. cd /etc/Step 2. sudo vi hosts# 粘贴140.82.112.4 github.com140.82.113.3 gist.github.com185.199.108.153 assets-cdn.github.com199.232.68.133 raw.githubusercontent.com199.232.68.133 gist.githubusercontent.com199.232.68.133 cloud.githubusercontent.com151.101.192.133 camo.githubusercontent.com199.232.68.133 avatars0.githubusercontent.com199.232.68.133 avatars1.githubusercontent.com199.232.68.133 avatars2.githubusercontent.com199.232.68.133 avatars3.githubusercontent.com199.232.68.133 avatars4.githubusercontent.com199.232.68.133 avatars5.githubusercontent.com199.232.68.133 avatars6.githubusercontent.com199.232.68.133 avatars7.githubusercontent.com199.232.68.133 avatars8.githubusercontent.com","categories":[{"name":"测试分类","slug":"测试分类","permalink":"http://www.010101.cc/categories/%E6%B5%8B%E8%AF%95%E5%88%86%E7%B1%BB/"}],"tags":[{"name":"测试标签","slug":"测试标签","permalink":"http://www.010101.cc/tags/%E6%B5%8B%E8%AF%95%E6%A0%87%E7%AD%BE/"}]},{"title":"线程切换之内核E_thead","slug":"E_Thread","date":"2021-11-08T14:23:44.689Z","updated":"2021-11-10T05:41:40.207Z","comments":true,"path":"2021/11/08/E_Thread/","link":"","permalink":"http://www.010101.cc/2021/11/08/E_Thread/","excerpt":"","text":"Wirte by 021. E_Thread 线程结构体 123456789101112131415161718192021结构体&#123; 线程名称 线程状态 堆栈起始地址 线程堆栈界限 （终止地址） 线程当前位置 ESP 线程函数参数 线程函数地址&#125;线程结构体数组0 --- 当前线程 ，main1 --- 创建的新线程 线程状态不同存储 123456正在运行线程 --- kpcr等待线程 --- 等待链表就绪/调度线程 --- 32个链表 线程的生命周期 创建 — 初始化线程堆栈 123456789101112131415161，结构体初始化赋值2，执行体，函数，参数，赋值3，创建堆栈，申请堆栈 stackpage , 0x80000 大小，4，堆栈初始化，起始地址、5，设定堆栈边界值（终止地址）6， 入栈7, kernelStack 栈顶 赋值，esp 赋值。kernelStack = 入栈对象 （1-6） 线程调度 12345 线程切换 SwapContext 线程不是被动切换，而是主动切换。 意思是，无论是时间片到了的被动切换，还是线程IO阻塞主动出让执行权，都需要当前线程调用切换线程函数. 线程没有使用TSS保存寄存器，而是使用堆栈. 线程切换过程就是堆栈切换过程. 在线程切换过程中，会判断2个线程是否属于同一个进程，如果不是，就切换cr3页面，也就是进程空间也切换了. ​ ![image-20211110115259985](/Users/jiankang/Library/Application Support/typora-user-images/image-20211110115259985.png) TheadSwap 1234567参数 ： 1，当前线程(esp)地址， 2，将要被切换线程(edi)地址步骤： 1，保存当前线的栈顶，上图的push操作. 2，将当前线程（esp）地址，存储到KernelStack中 --- mov [esi kernelStack] ,esp 3，将内核中 将要被切换edi线程 的地址，交换到当前位置 --- mov esp, [edi kernelStack] 主动切换 ![image-20211110123138625](/Users/jiankang/Library/Application Support/typora-user-images/image-20211110123138625.png) 1取出当前CPU kpcr正在执行的线程放到edi中 线程中断 时钟中断 ![image-20211110132601818](/Users/jiankang/Library/Application Support/typora-user-images/image-20211110132601818.png) 异常中断 1INT N， 页面异常 如何永久占用CPU? 1满足 不调用API , 并且不会出现异常，并调用cli指令，屏蔽时间中断，CPU就会忽略时钟片中断.","categories":[{"name":"操作系统内核","slug":"操作系统内核","permalink":"http://www.010101.cc/categories/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%86%85%E6%A0%B8/"}],"tags":[{"name":"操作系统内核","slug":"操作系统内核","permalink":"http://www.010101.cc/tags/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%86%85%E6%A0%B8/"}]},{"title":"CPU内核模块之KPCR","slug":"博客模板KPCR","date":"2021-11-08T14:23:44.689Z","updated":"2021-11-10T02:22:52.255Z","comments":true,"path":"2021/11/08/博客模板KPCR/","link":"","permalink":"http://www.010101.cc/2021/11/08/%E5%8D%9A%E5%AE%A2%E6%A8%A1%E6%9D%BFKPCR/","excerpt":"","text":"github 访问慢，而其他网页正常.Mac 修改hosts文件12345678910111213141516171819202122232425262728293031Step 1. cd /etc/Step 2. sudo vi hosts# 粘贴140.82.112.4 github.com140.82.113.3 gist.github.com185.199.108.153 assets-cdn.github.com199.232.68.133 raw.githubusercontent.com199.232.68.133 gist.githubusercontent.com199.232.68.133 cloud.githubusercontent.com151.101.192.133 camo.githubusercontent.com199.232.68.133 avatars0.githubusercontent.com199.232.68.133 avatars1.githubusercontent.com199.232.68.133 avatars2.githubusercontent.com199.232.68.133 avatars3.githubusercontent.com199.232.68.133 avatars4.githubusercontent.com199.232.68.133 avatars5.githubusercontent.com199.232.68.133 avatars6.githubusercontent.com199.232.68.133 avatars7.githubusercontent.com199.232.68.133 avatars8.githubusercontent.com","categories":[{"name":"测试分类","slug":"测试分类","permalink":"http://www.010101.cc/categories/%E6%B5%8B%E8%AF%95%E5%88%86%E7%B1%BB/"}],"tags":[{"name":"测试标签","slug":"测试标签","permalink":"http://www.010101.cc/tags/%E6%B5%8B%E8%AF%95%E6%A0%87%E7%AD%BE/"}]},{"title":"github 访问慢，而其他网页正常,fix","slug":"github 访问慢，而其他网页正常","date":"2021-11-08T14:04:58.000Z","updated":"2021-11-09T04:46:24.555Z","comments":true,"path":"2021/11/08/github 访问慢，而其他网页正常/","link":"","permalink":"http://www.010101.cc/2021/11/08/github%20%E8%AE%BF%E9%97%AE%E6%85%A2%EF%BC%8C%E8%80%8C%E5%85%B6%E4%BB%96%E7%BD%91%E9%A1%B5%E6%AD%A3%E5%B8%B8/","excerpt":"","text":"github 访问慢，而其他网页正常.Mac 修改hosts文件12345678910111213141516171819202122232425262728293031Step 1. cd /etc/Step 2. sudo vi hosts# 粘贴140.82.112.4 github.com140.82.113.3 gist.github.com185.199.108.153 assets-cdn.github.com199.232.68.133 raw.githubusercontent.com199.232.68.133 gist.githubusercontent.com199.232.68.133 cloud.githubusercontent.com151.101.192.133 camo.githubusercontent.com199.232.68.133 avatars0.githubusercontent.com199.232.68.133 avatars1.githubusercontent.com199.232.68.133 avatars2.githubusercontent.com199.232.68.133 avatars3.githubusercontent.com199.232.68.133 avatars4.githubusercontent.com199.232.68.133 avatars5.githubusercontent.com199.232.68.133 avatars6.githubusercontent.com199.232.68.133 avatars7.githubusercontent.com199.232.68.133 avatars8.githubusercontent.com","categories":[],"tags":[{"name":"常见问题解决","slug":"常见问题解决","permalink":"http://www.010101.cc/tags/%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/"}]},{"title":"免主机，免备案，从0到1教你搭建个人博客(hexo + github page)！","slug":"github+hexo","date":"2021-11-08T14:04:58.000Z","updated":"2021-11-09T04:46:22.987Z","comments":true,"path":"2021/11/08/github+hexo/","link":"","permalink":"http://www.010101.cc/2021/11/08/github+hexo/","excerpt":"","text":"原理简介：1.github page 提供服务和博客文档云端托管2.hexo提供博客页面模板引擎（负责加载md文档并引用渲染到博客主页）3.md编辑器负责本地编辑博客内容4.git客户端负责push文档到github托管.5.github page 负责显示推送的最新内容环境准备以Mac机器为操作环境, 安装步骤本篇不作讲解.NodeJs12node -vv12.13.1 Hexo12345678910111213141516171819202122hexo versionINFO Validating confighexo: 5.4.0hexo-cli: 4.3.0os: darwin 20.6.0 11.6node: 12.13.1v8: 7.7.299.13-node.16uv: 1.33.1zlib: 1.2.11brotli: 1.0.7ares: 1.15.0modules: 72nghttp2: 1.39.2napi: 5llhttp: 1.1.4http_parser: 2.8.0openssl: 1.1.1dcldr: 35.1icu: 64.2tz: 2019cunicode: 12.1 Git客户端12git --versiongit version 2.23.0 MarkDown 编辑器1博主安装的是 typora. 操作部署步骤1. 总流程步骤123456789101112131415161718191,新建博客文档文件夹 ,博主是在桌面 /desktopmkdir blog2,初始化bloghexo init blog3, 编译环境hexo g4, 本地查看效果hexo s5, 部署githubhexo d6, 清除本地缓存hexo clean 2. hexo配置文件环境介绍123456789101112# hexo 配置文件，负责博客主题样式加载引导/blog/_config.yml# themes 博客主题文件夹 负责存储主题文件/blog/themes# public 此文件是对外开放的博客文件，也是推送github的文件/blog/public# 资源文件夹 ，负责你写的博客内容给主页加载的md部分，也可以CNAME放在其中这样Push不会被覆盖/blog/source ​","categories":[],"tags":[{"name":"工具使用","slug":"工具使用","permalink":"http://www.010101.cc/tags/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/"}]},{"title":"win32 之 PE文件结构.","slug":"win32之PE文件","date":"2021-11-08T14:04:58.000Z","updated":"2021-11-09T04:50:00.944Z","comments":true,"path":"2021/11/08/win32之PE文件/","link":"","permalink":"http://www.010101.cc/2021/11/08/win32%E4%B9%8BPE%E6%96%87%E4%BB%B6/","excerpt":"","text":"PE文件结构 Windows : PE (Portable Excuteable) 文件结构 Linux : ELF(Executable and linking formate) 文件结构 PE 文件特征和格式 执行二进制文件转16进制后，前2个字节是MZ, 3C位置值，再往下找3C位置的字节值会显示PE. 可判定为PE. PE文件结构排列DOS + PE文件头 + 字表 + 字节数 dos文件头 MZ头 ：64byte + 20byte PE_header + 节表section_header 40byte + option_header 224byte节数据 内存拉升： PE文件在硬盘中200倍拉升， 在内存中1000倍拉升，空间扩充. ![image-20211109124840719](/Users/jiankang/Library/Application Support/typora-user-images/image-20211109124840719.png)","categories":[],"tags":[{"name":"操作系统内核","slug":"操作系统内核","permalink":"http://www.010101.cc/tags/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%86%85%E6%A0%B8/"}]}],"categories":[{"name":"测试分类","slug":"测试分类","permalink":"http://www.010101.cc/categories/%E6%B5%8B%E8%AF%95%E5%88%86%E7%B1%BB/"},{"name":"操作系统内核","slug":"操作系统内核","permalink":"http://www.010101.cc/categories/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%86%85%E6%A0%B8/"}],"tags":[{"name":"测试标签","slug":"测试标签","permalink":"http://www.010101.cc/tags/%E6%B5%8B%E8%AF%95%E6%A0%87%E7%AD%BE/"},{"name":"操作系统内核","slug":"操作系统内核","permalink":"http://www.010101.cc/tags/%E6%93%8D%E4%BD%9C%E7%B3%BB%E7%BB%9F%E5%86%85%E6%A0%B8/"},{"name":"常见问题解决","slug":"常见问题解决","permalink":"http://www.010101.cc/tags/%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98%E8%A7%A3%E5%86%B3/"},{"name":"工具使用","slug":"工具使用","permalink":"http://www.010101.cc/tags/%E5%B7%A5%E5%85%B7%E4%BD%BF%E7%94%A8/"}]}